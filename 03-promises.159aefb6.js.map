{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACIC,EAAQ,EACNC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,6BAC9BE,KAAMH,SAASC,cAAc,4BAC7BG,OAAQJ,SAASC,cAAc,+BAuBjC,SAASI,EAAcC,EAAUC,GACb,IAAIC,SAAQ,SAACC,EAAKC,GAChCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAI,CAAEK,SAAAR,EAAUJ,MAAAK,IAEhBG,EAAI,CAAEI,SAAAR,EAAUJ,MAAAK,G,GAEjBA,E,IAEGQ,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUG,EAAKD,EAALd,MAAcgB,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANJ,EAAM,M,IACzGK,OAAI,SAAAN,G,IAAGF,EAAQE,EAARF,SAAUS,EAAKP,EAALd,MAAcgB,EAAAvB,GAASwB,OAAOK,QAAQ,sBAAqCH,OAAfP,EAAS,QAAYO,OAANE,EAAM,M,IAhC3GzB,EAAKC,KAAK0B,iBAAiB,UAE3B,SAAqBC,GAEnB,GADAA,EAAEC,iBACE7B,EAAKI,MAAM0B,MAAQ,GAAK9B,EAAKK,KAAKyB,MAAQ,GAAK9B,EAAKM,OAAOwB,OAAS,EAEpE,YADFV,EAAAvB,GAASwB,OAAOK,QAAS,kFAI3B,IAAM,IAAIK,EAAI,EAAGA,GAAK/B,EAAKM,OAAOwB,MAAOC,GAAK,EAClC,IAANA,GACFhC,EAAQiC,OAAOhC,EAAKI,MAAM0B,OAC1BvB,EAAcwB,EAAGhC,KAEjBA,GAASiC,OAAOhC,EAAKK,KAAKyB,OACzBvB,EAAewB,EAAGhC,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nlet delay = 0;\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('.form input[name=\"delay\"]'),\n  step: document.querySelector('.form input[name=\"step\"]'),\n  amount: document.querySelector('.form input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmitBtn);\n\nfunction onSubmitBtn(e) {\n  e.preventDefault();\n  if (refs.delay.value < 0 || refs.step.value < 0 || refs.amount.value <= 0) {\n    Notiflix.Notify.failure(`❌ Please enter correct data     First delay >= 0 , Delay step >= 0, Amount > 0`);\n    return\n  };\n\n  for ( let i = 1; i <= refs.amount.value; i += 1) {\n    if (i === 1) {\n      delay = Number(refs.delay.value);\n      createPromise(i, delay);\n    } else {\n      delay += Number(refs.step.value)\n       createPromise( i, delay);\n    } \n  };\n};\n\nfunction createPromise(position, delay) {\n    const promise = new Promise((res, rej) => {\n      setTimeout(() => {  \n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          res({ position, delay });\n        } else {\n          rej({ position, delay });\n        }  \n      }, delay);\n    });\n    promise.then(({ position, delay }) => { Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`) })\n      .catch(({ position, delay }) => { Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`) })\n  };\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","res","rej","setTimeout","Math","random","position","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","addEventListener","e","preventDefault","value","i","Number"],"version":3,"file":"03-promises.159aefb6.js.map"}